import { CredifyClass } from "./common";
import { GenerateDisbursementDocumentsDataResponse } from "./type";
export declare class Claims extends CredifyClass {
    generateCommitments: (claims: any) => object;
    /**
     * composeBody
     * @param id: string - Organization ID hosting this server
     * @param entityId: string
     * @param claims: any
     * @param commitments: object
     * @example claims:
     * {
     *   "finscore-score": {
     *     "finscore-score:credit-score": 1234,
     *     "finscore-score:social-score": 10
     *   }
     * }
     *
     * @example commitments:
     * {
     *   "finscore-score": "abcdefghijk"
     * }
     */
    claimTokens: (id: string, entityId: string, claims: any) => {
        claimTokens: any;
        commitments: any;
    };
    /**
     * Push claim tokens
     * This is for Market
     * @param id - Organization ID
     * @param entityId - Subject individual ID
     * @param claims
     */
    push(id: string, entityId: string, claims: any): Promise<object>;
    /**
     * Push claim tokens
     * This is for Market
     * @param id - Organization ID
     * @param entityId - Subject individual ID
     * @param claims
     */
    pushDisbursementDocuments(id: string, entityId: string, claims: any): Promise<object>;
    validateRequest(accessToken: string, requestToken: string, approvalToken: string): Promise<{
        publicKey: string;
        scopes: string[];
    }>;
    validateAccessToken(accessToken: string): Promise<boolean>;
    validateRequestToken(requestToken: string, currentTime: Number): Promise<any>;
    validateApprovalToken(requiredStandardScopes: string[], approvalToken: string, currentTime: Number): Promise<string[]>;
    /**
     * Encrypts claim values with an ephemeral private key.
     * This is for Market.
     * @param claimValues - claim object
     * @param publicKey - pem file or Base64 URL encoded string
     */
    encrypt(claimValues: any, publicKey: string): Promise<any>;
    /**
     * Encrypts claim values with an ephemeral private key.
     * This is for Market.
     * @param claimValues - claim object
     * @param publicKey - pem file or Base64 URL encoded string
     * @return Promise<GenerateDisbursementDocumentsDataResponse>
     */
    generateDisbursementDocumentsData(claimValues: any, publicKey: string, providerId: string, entityId: string): Promise<GenerateDisbursementDocumentsDataResponse>;
}
