{"version":3,"file":"index.js","sources":["../src/common.ts","../src/constants/bnpl.ts","../src/utils.ts","../src/entity.ts","../src/claims.ts","../src/config.ts","../src/oidc.ts","../src/evaluator.ts","../src/offer.ts","../src/auth.ts","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../src/bnpl.ts","../src/errors.ts","../src/apiClient.ts","../src/index.ts"],"sourcesContent":["import { Signing } from \"@credify/crypto\";\nimport type { CredifyConfig } from \"../types\";\nimport ApiClient from \"./apiClient\";\n\nexport class CredifyClass {\n  config: CredifyConfig;\n  apiClient: ApiClient;\n  signing: Signing;\n\n  constructor(config: CredifyConfig, apiClient: ApiClient, signing: Signing) {\n    this.config = config;\n    this.apiClient = apiClient;\n    this.signing = signing\n  }\n}\n\nexport enum ProductType {\n  InsuranceHealthForIndividual = \"insurance:health-insurance:for-individual\",\n  InsuranceHealthForGroup = \"insurance:health-insurance:for-group\",\n  InsuranceAutomobileMotorbike = \"insurance:automobile-insurance:motorbike\",\n  InsuranceAutomobileCar = \"insurance:automobile-insurance:car\",\n  InsuranceHomeHomeowner = \"insurance:home-insurance:for-homeowner\",\n  InsuranceHomeHouse = \"insurance:home-insurance:for-house\",\n  InsuranceHomeRenter = \"insurance:home-insurance:for-renter\",\n\n  ConsumerUnsecuredLoanCash = \"consumer-financing:unsecured-loan:cash\",\n  ConsumerUnsecuredLoanCreditCard = \"consumer-financing:unsecured-loan:credit-card\",\n  ConsumerUnsecuredLoanBnpl = \"consumer-financing:unsecured-loan:bnpl\",\n  ConsumerUnsecuredLoanCdLoan = \"consumer-financing:unsecured-loan:cd-loan\",\n  ConsumerSecuredLoanPayday = \"consumer-financing:secured-loan:payday\",\n  ConsumerSecuredLoanPoFinancing = \"consumer-financing:secured-loan:po-financing\",\n\n  CorporateUnsecuredLoanCash = \"corporate-financing:unsecured-loan:cash\",\n  CorporateUnsecuredLoanCreditCard = \"corporate-financing:unsecured-loan:credit-card\",\n  CorporateUnsecuredLoanBnpl = \"corporate-financing:unsecured-loan:bnpl\",\n  CorporateUnsecuredLoanCdLoan = \"corporate-financing:unsecured-loan:cd-loan\",\n  CorporateSecuredLoanPayday = \"corporate-financing:secured-loan:payday\",\n  CorporateSecuredLoanPoFinancing = \"corporate-financing:secured-loan:po-financing\",\n\n  CreditCardTraditional = \"credit-card:traditional\",\n  CreditCardCBCC = \"credit-card:cbcc\",\n}","export const BNPL_ORDER_PREFIX = \"bnpl_order\";\n","import { BNPL_ORDER_PREFIX } from \"./constants/bnpl\";\nimport { Duration, FiatCurrency } from \"./type\";\nexport { camelize, decamelize } from \"@credify/crypto\";\n\nconst CURRENCY_VALUES = [\"USD\", \"VND\", \"JPY\"];\nconst DURATION_UNIT = [\"UNKNOWN\", \"DAY\", \"MONTH\", \"YEAR\"];\n\nconst isArray = (a: any): boolean => {\n  return Array.isArray(a);\n};\n\nconst isObject = (o: any): boolean => {\n  return o === Object(o) && !isArray(o) && typeof o !== \"function\";\n};\n\nexport const convertJsonValueToString = (o: any): any => {\n  if (isObject(o)) {\n    const n = {};\n    Object.keys(o).forEach((k) => {\n      if (typeof o[k] !== \"object\") {\n        // @ts-ignore\n        n[k] = `${o[k]}`;\n      } else {\n        // @ts-ignore\n        n[k] = convertJsonValueToString(o[k]);\n      }\n    });\n    return n;\n  } else if (isArray(o)) {\n    return o.map((i: any) => {\n      return convertJsonValueToString(i);\n    });\n  }\n\n  return o;\n};\n\nexport const isObjectNullOrEmpty = (obj: any) => {\n  return obj === null || Object.keys(obj).length === 0;\n};\n\nexport const trimObject = (o: any) => {\n  if (isObject(o)) {\n    const trimmed = {};\n    Object.keys(o).forEach((k) => {\n      if (typeof o[k] !== \"object\") {\n        // @ts-ignore\n        trimmed[k] = o[k].replace(/\\\"/g, \"\");\n      } else {\n        // @ts-ignore\n        trimmed[k] = trimObject(o[k]);\n      }\n    });\n    return trimmed;\n  } else if (isArray(o)) {\n    return o.map((i: any) => {\n      return trimObject(i);\n    });\n  }\n\n  return o;\n};\n\nexport const validateFiatCurrencyObject = (amount?: FiatCurrency | null) => {\n  let c = undefined;\n  if (amount && amount.currency) {\n    if (CURRENCY_VALUES.includes(amount.currency)) {\n      if (amount.value && !isNaN(amount.value)) {\n        c = {\n          currency: amount.currency,\n          value: amount.value.toString(),\n        };\n      }\n    } else {\n      throw new Error(\n        `The currency needs to be one of ${CURRENCY_VALUES.join(\", \")}`\n      );\n    }\n  }\n  return c;\n};\n\nexport const validateDurationObject = (duration?: Duration | null) => {\n  let c = undefined;\n  if (duration && duration.unit) {\n    if (DURATION_UNIT.includes(duration.unit)) {\n      if (duration.value && !isNaN(duration.value)) {\n        c = {\n          unit: duration.unit,\n          value: duration.value.toString(),\n        };\n      }\n    } else {\n      throw new Error(\n        `The unit needs to be one of ${DURATION_UNIT.join(\", \")}`\n      );\n    }\n  }\n  return c;\n};\n\nexport const validateDisbursementClaimKey = (claimKey: string) => {\n  if (claimKey.split(\":\").length !== 3) {\n    return false;\n  }\n\n  if (claimKey.split(\":\")[0] !== BNPL_ORDER_PREFIX) {\n    return false;\n  }\n\n  return true;\n};\n","// @ts-ignore\nimport { Encryption, Signing } from \"@credify/crypto\";\nimport { CredifyClass } from \"./common\";\nimport type { Profile, Keys } from \"../types\";\nimport { decamelize } from \"./utils\";\nimport { EntityResponse } from \"@credify/api-docs/apiClients/types/apiClients/v1\";\n\nexport interface EntityCreationPayload {\n  profile: Profile;\n  signingPublicKey: string;\n  signingSecret: string;\n  encryptionPublicKey: string;\n  encryptionSecret: string;\n  password: string;\n}\n\nexport class Entity extends CredifyClass {\n  private validate(profile: Profile): boolean {\n    if (!profile.name && !profile.localName) {\n      throw new Error(\"Name or Local name needs to be provided.\");\n    }\n    if (profile.emails.length < 1) {\n      throw new Error(\"Email needs to be provided.\");\n    }\n    if (profile.phones.length < 1) {\n      throw new Error(\"Phone needs to be provided.\");\n    }\n    return true;\n  }\n\n  private trim(profile: Profile): Profile {\n    // TODO: trim texts in profile.\n    return profile;\n  }\n\n  /**\n   * Creates a new individual entity.\n   * @param profile\n   * @param password\n   * @param keys - Key pairs can be passed from frontend.\n   */\n  public async create(\n    profile: Profile,\n    password: string,\n    keys?: Keys\n  ): Promise<string> {\n    this.validate(profile);\n    if (!password) {\n      throw new Error(\"Password needs to be provided.\");\n    }\n\n    let encryptionPublicKey = \"\";\n    let encryptionSecret = \"\";\n    let signingPublicKey = \"\";\n    let signingSecret = \"\";\n\n    if (keys) {\n      encryptionPublicKey = keys.encryptionPublicKey;\n      encryptionSecret = keys.encryptionSecret;\n      signingPublicKey = keys.signingPublicKey;\n      signingSecret = keys.signingSecret;\n    } else {\n      // Key generation - Encryption\n      const encryption = new Encryption();\n      await encryption.generateKeyPair();\n      encryptionPublicKey = await encryption.exportPublicKey();\n      encryptionSecret = await encryption.exportPrivateKey(password);\n\n      // Key generation - Signing\n      const signing = new Signing();\n      signing.generateKeyPair();\n      signingPublicKey = signing.exportPublicKey();\n      signingSecret = signing.exportPrivateKey(password);\n    }\n\n    const payload: EntityCreationPayload = {\n      profile: this.trim(profile),\n      signingPublicKey,\n      signingSecret,\n      encryptionPublicKey,\n      encryptionSecret,\n      password,\n    };\n\n    try {\n      const res = await this.apiClient.post<EntityResponse>(\n        \"/idpass/users\",\n        { ...decamelize(payload) }\n      );\n      if (!res.data?.data?.id) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data.id;\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n","import {\n  generateCommitment,\n  parseJwt,\n  Encryption,\n  Signing,\n  verifyJwt,\n  generateClaimToken,\n  generateDisbursementToken,\n} from \"@credify/crypto\";\nimport { CredifyClass } from \"./common\";\nimport {\n  camelize,\n  convertJsonValueToString,\n  validateDisbursementClaimKey,\n} from \"./utils\";\nimport { CommonResponse, PublicKeyResponse } from \"@credify/api-docs/apiClients/types/apiClients/v1\";\nimport { BNPL_ORDER_PREFIX } from \"./constants/bnpl\";\nimport { GenerateDisbursementDocumentsDataResponse } from \"./type\";\n\nconst REQUEST_EXPIRATION_DURATION = 60 * 60;\n\nconst CUSTOM_SCOPE_PREFIX = {\n  offer: \"offer:\",\n  dop: \"dop:\",\n  bnplOrder: \"bnpl_order:\",\n};\n\nexport class Claims extends CredifyClass {\n  generateCommitments = (claims: any): object => {\n    const scopeNames = Object.keys(claims);\n    const value = {};\n    scopeNames.forEach((scopeName) => {\n      // @ts-ignore\n      value[scopeName] = generateCommitment();\n    });\n    return value;\n  };\n\n  /**\n   * composeBody\n   * @param id: string - Organization ID hosting this server\n   * @param entityId: string\n   * @param claims: any\n   * @param commitments: object\n   * @example claims:\n   * {\n   *   \"finscore-score\": {\n   *     \"finscore-score:credit-score\": 1234,\n   *     \"finscore-score:social-score\": 10\n   *   }\n   * }\n   *\n   * @example commitments:\n   * {\n   *   \"finscore-score\": \"abcdefghijk\"\n   * }\n   */\n  claimTokens = (\n    id: string,\n    entityId: string,\n    claims: any\n  ): { claimTokens: any; commitments: any } => {\n    const scopeNames = Object.keys(claims);\n    const commitmentsCompose = {};\n    const tokens = scopeNames.map((scopeName) => {\n      const { token, commitment } = generateClaimToken(\n        this.signing,\n        id,\n        entityId,\n        scopeName,\n        claims\n      );\n      // @ts-ignore\n      commitmentsCompose[scopeName] = commitment;\n      return token;\n    });\n\n    return {\n      claimTokens: tokens,\n      commitments: commitmentsCompose,\n    };\n  };\n\n  /**\n   * Push claim tokens\n   * This is for Market\n   * @param id - Organization ID\n   * @param entityId - Subject individual ID\n   * @param claims\n   */\n  public async push(\n    id: string,\n    entityId: string,\n    claims: any\n  ): Promise<object> {\n    const { claimTokens, commitments } = this.claimTokens(id, entityId, claims);\n    await this.apiClient.put<CommonResponse>(\n      `/claim-providers/entities/${entityId}/claims`,\n      {\n        claim_tokens: claimTokens,\n      }\n    );\n    return commitments;\n  }\n\n  /**\n   * Push claim tokens\n   * This is for Market\n   * @param id - Organization ID\n   * @param entityId - Subject individual ID\n   * @param claims\n   */\n  public async pushDisbursementDocuments(\n    id: string,\n    entityId: string,\n    claims: any\n  ): Promise<object> {\n    if (!claims) {\n      throw new Error(\"Compose claim is not valid.\");\n    }\n\n    const invalidClaim = Object.keys(claims).find((key) => {\n      return !validateDisbursementClaimKey(key);\n    });\n    if (invalidClaim) {\n      throw new Error(\"Compose claim is not valid.\");\n    }\n\n    return this.push(id, entityId, claims);\n  }\n\n  public async validateRequest(\n    accessToken: string,\n    requestToken: string,\n    approvalToken: string\n  ): Promise<{ publicKey: string; scopes: string[] }> {\n    const now = Number((new Date().getTime() / 1000).toFixed(0));\n    await this.validateAccessToken(accessToken);\n    const requestPayload = await this.validateRequestToken(requestToken, now);\n    const requiredStandardScopes: string[] =\n      requestPayload.scopes.split(\" \") || [];\n    const grantedScopes = await this.validateApprovalToken(\n      requiredStandardScopes,\n      approvalToken,\n      now\n    );\n    const encryptionPublicKey = requestPayload.encryptionPublicKey;\n    return { publicKey: encryptionPublicKey, scopes: grantedScopes };\n  }\n\n  async validateAccessToken(accessToken: string): Promise<boolean> {\n    const body = {\n      token: accessToken,\n      scope: \"oidc_client:read_encrypted_claims\",\n    };\n    const res = await this.apiClient.post(\"/oauth2/introspect\", body);\n    // @ts-ignore\n    const value = res.data.data;\n    // @ts-ignore\n    const valid0 = value?.active === true;\n    if (!valid0) {\n      throw new Error(\"Access token is not valid.\");\n    }\n    return true;\n  }\n\n  async validateRequestToken(\n    requestToken: string,\n    currentTime: Number\n  ): Promise<any> {\n    const requestJwt = parseJwt(requestToken);\n    const requestPayload = camelize(requestJwt.payload);\n    if (requestPayload.iat + REQUEST_EXPIRATION_DURATION <= currentTime) {\n      throw new Error(\"This request is expired.\");\n    }\n    if (requestPayload.iat > currentTime) {\n      throw new Error(\"This request timestamp is invalid.\");\n    }\n\n    const requesterKey = await this.apiClient.get<\n      PublicKeyResponse\n    >(`/entity/public-key?entity_id=${requestPayload.iss}`);\n    const pub1 = requesterKey.data.data?.signing || \"\";\n    if (pub1 === \"\") {\n      throw new Error(\"Public key is not found.\");\n    }\n    const s1 = new Signing();\n    s1.importPublicKey(pub1);\n    const valid1 = verifyJwt(requestJwt, s1);\n    if (!valid1) {\n      throw new Error(\"Signature of request token is not valid.\");\n    }\n    return requestPayload;\n  }\n\n  async validateApprovalToken(\n    requiredStandardScopes: string[],\n    approvalToken: string,\n    currentTime: Number\n  ): Promise<string[]> {\n    const approvalJwt = parseJwt(approvalToken);\n    const approvalPayload = camelize(approvalJwt.payload);\n    if (approvalPayload.iat + REQUEST_EXPIRATION_DURATION <= currentTime) {\n      throw new Error(\"This request is expired.\");\n    }\n    if (approvalPayload.iat > currentTime) {\n      throw new Error(\"This request timestamp is invalid.\");\n    }\n    const grantedScopes: string[] = approvalPayload.scopes.split(\" \") || [];\n    const validScopes = requiredStandardScopes.every((val) => {\n      if (\n        val.startsWith(CUSTOM_SCOPE_PREFIX.offer) ||\n        val.startsWith(CUSTOM_SCOPE_PREFIX.dop) ||\n        val.startsWith(CUSTOM_SCOPE_PREFIX.bnplOrder)\n      ) {\n        return true;\n      }\n      return grantedScopes.includes(val);\n    });\n    if (!validScopes) {\n      throw new Error(\"Granted scopes are not valid.\");\n    }\n    const approvalKey = await this.apiClient.get<\n      PublicKeyResponse\n    >(`/entity/public-key?entity_id=${approvalPayload.iss}`);\n    const pub1 = approvalKey.data.data?.signing || \"\";\n    if (pub1 === \"\") {\n      throw new Error(\"Public key is not found.\");\n    }\n    const s1 = new Signing();\n    s1.importPublicKey(pub1);\n    const valid1 = verifyJwt(approvalJwt, s1);\n    if (!valid1) {\n      throw new Error(\"Signature of approval token is not valid.\");\n    }\n    return grantedScopes;\n  }\n\n  /**\n   * Encrypts claim values with an ephemeral private key.\n   * This is for Market.\n   * @param claimValues - claim object\n   * @param publicKey - pem file or Base64 URL encoded string\n   */\n  public async encrypt(claimValues: any, publicKey: string): Promise<any> {\n    const enc = new Encryption();\n    if (publicKey.startsWith(\"M\")) {\n      await enc.importPublicKeyInBase64Url(publicKey);\n    } else {\n      await enc.importPublicKey(publicKey);\n    }\n    claimValues = convertJsonValueToString(claimValues);\n    return await enc.encryptFieldByField(claimValues);\n  }\n\n  /**\n   * Encrypts claim values with an ephemeral private key.\n   * This is for Market.\n   * @param claimValues - claim object\n   * @param publicKey - pem file or Base64 URL encoded string\n   * @return Promise<GenerateDisbursementDocumentsDataResponse>\n   */\n  public async generateDisbursementDocumentsData(\n    claimValues: any,\n    publicKey: string,\n    providerId: string,\n    entityId: string\n  ): Promise<GenerateDisbursementDocumentsDataResponse> {\n    let orderId = \"\";\n    const invalidClaim = Object.keys(claimValues).find((key) => {\n      return !validateDisbursementClaimKey(key);\n    });\n\n    // Validate claim\n    if (invalidClaim) {\n      throw new Error(\"Compose claim is not valid.\");\n    }\n\n    orderId = Object.keys(claimValues)[0].split(\":\")[1];\n\n    const signing = this.signing;\n    // Handle get jwt token\n    const token = await generateDisbursementToken(\n      signing,\n      providerId,\n      entityId,\n      claimValues,\n      publicKey\n    );\n    const claimNames: { [key: string]: string } = {};\n    Object.keys(claimValues).forEach((key) => {\n      claimNames[key] = `${BNPL_ORDER_PREFIX}:${orderId}`;\n      claimNames[`${key}:commitment`] = `${BNPL_ORDER_PREFIX}:${orderId}`;\n    });\n\n    const claimSourceKey = `${BNPL_ORDER_PREFIX}:${orderId}`;\n\n    const result = {\n      _claim_names: claimNames,\n      _claim_sources: {\n        [claimSourceKey]: {\n          JWT: token,\n        },\n      },\n    };\n    return result;\n  }\n}\n","import type {CredifyConfig} from \"../types\";\n\nexport const hosts = (config: CredifyConfig) => {\n  switch (config.mode) {\n    case \"production\":\n      return {\n        api: \"https://api.credify.one/\",\n        oidcCore: \"https://oidc-core.credify.one/\",\n        oidcAuth: \"https://oidc-auth.credify.one/\"\n      };\n    case \"sandbox\":\n      return {\n        api: \"https://sandbox-api.credify.dev/\",\n        oidcCore: \"https://sandbox-oidc-core.credify.dev/\",\n        oidcAuth: \"https://sandbox-oidc-auth.credify.dev/\"\n      };\n    case \"tis-sandbox\":\n      return {\n        api: \"https://shirahama.credify.dev/\",\n        oidcCore: \"https://tis-sandbox-oidc-core.credify.dev/\",\n        oidcAuth: \"https://tis-sandbox-oidc-auth.credify.dev/\"\n      };\n    case \"tis-production\":\n      return {\n        api: \"https://shirahama.credify.one/\",\n        oidcCore: \"https://tis-oidc-core.credify.one/\",\n        oidcAuth: \"https://tis-oidc-auth.credify.one/\"\n      };\n    case \"uat\":\n      return {\n        api: \"https://uat-api.credify.dev/\",\n        oidcCore: \"https://uat-oidc-core.credify.dev/\",\n        oidcAuth: \"https://uat-oidc-auth.credify.dev/\"\n      };\n    case \"sit\":\n      return {\n        api: \"https://sit-api.credify.ninja/\",\n        oidcCore: \"https://sit-oidc-core.credify.ninja/\",\n        oidcAuth: \"https://sit-oidc-auth.credify.ninja/\"\n      };\n    case \"development\":\n      return {\n        api: \"https://dev-api.credify.ninja/\",\n        oidcCore: \"https://dev-oidc-core.credify.ninja/\",\n        oidcAuth: \"https://dev-oidc-auth.credify.ninja/\"\n      };\n    case \"local\":\n      return {\n        api: \"http://localhost:8000/\",\n        oidcCore: \"http://localhost:4444/\",\n        oidcAuth: \"http://localhost:3000/\"\n      };\n  }\n};\n\nexport const ecosystemId = (config: CredifyConfig) => {\n  switch (config.mode) {\n    case \"production\":\n      return \"74e95121-0cd3-4613-9bf5-b9fa65b7a9e1\";\n    case \"sandbox\":\n      return \"62fc5724-3751-4797-be79-605635fa6c93\";\n    case \"uat\":\n      return \"62fc5724-3751-4797-be79-605635fa6c93\";\n    case \"sit\":\n      return \"62fc5724-3751-4797-be79-605635fa6c93\";\n    case \"development\":\n      return \"62fc5724-3751-4797-be79-605635fa6c93\";\n    case \"local\":\n      return \"62fc5724-3751-4797-be79-605635fa6c93\";\n  }\n}\n","import { Encryption, generateJwt, generateRequestToken } from \"@credify/crypto\";\nimport { hosts } from \"./config\";\nimport { decamelize, trimObject } from \"./utils\";\nimport type { OIDCOptions } from \"../types\";\nimport { CredifyClass } from \"./common\";\n\nexport class OIDC extends CredifyClass {\n  /**\n   * Generates a new OIDC URL.\n   * For data consumer\n   * @param id - Organization ID hosting this server\n   * @param redirectUrl\n   * @param scopes\n   * @param options\n   * @returns { oidcUrl: string, privateKey: string } - this private key is base64 URL encoded data.\n   */\n  public async initiateOIDC(\n    id: string,\n    redirectUrl: string,\n    scopes: string[],\n    options?: OIDCOptions\n  ): Promise<{ oidcUrl: string; privateKey: string }> {\n    if (!scopes.includes(\"openid\")) {\n      throw new Error(\"openid is required.\");\n    }\n    const enc = new Encryption();\n    await enc.generateKeyPair();\n\n    // const privateKey = await enc.exportPrivateKey();\n    // const publicKey = await enc.exportPublicKey();\n    const privateKeyInBase64Url = await enc.exportPrivateKeyInBase64Url();\n    const publicKeyInBase64Url = await enc.exportPublicKeyInBase64Url();\n\n    // NOTE: Add `-30` just in case of time collision.\n    const timestamp = Number((new Date().getTime() / 1000).toFixed(0)) - 30;\n    const formattedScopes = scopes.join(\" \");\n    const payload = {\n      iss: id,\n      encryptionPublicKey: publicKeyInBase64Url,\n      iat: timestamp,\n      scopes: formattedScopes,\n    };\n\n    const params = {\n      clientId: id,\n      redirectUri: redirectUrl,\n      scope: formattedScopes,\n      // publicKey: publicKeyInBase64Url,\n      responseType: options?.responseType || \"code\",\n      responseMode: options?.responseMode || \"form_post\",\n      state: options?.state || Math.random().toString(),\n      nonce: Math.random().toString(),\n    };\n\n    if (options?.offerCode) {\n      // @ts-ignore\n      payload[\"offerCode\"] = options.offerCode;\n    }\n\n    if (options?.packageCode) {\n      // @ts-ignore\n      payload[\"packageCode\"] = options.packageCode;\n    }\n\n    if (options?.dopCode) {\n      // @ts-ignore\n      payload[\"dopCode\"] = options.dopCode;\n    }\n\n    if (options?.userId) {\n      // @ts-ignore\n      params[\"entityId\"] = options.userId;\n    }\n\n    if (options?.phoneNumber) {\n      // @ts-ignore\n      params[\"phoneNumber\"] = options.phoneNumber;\n    }\n\n    const requestToken = generateJwt(this.signing, decamelize(payload));\n\n    // @ts-ignore\n    params[\"requestToken\"] = requestToken;\n\n    const { oidcCore } = hosts(this.config);\n\n    const path = `oauth2/auth?${new URLSearchParams(\n      decamelize(params)\n    ).toString()}`;\n    // NOTE: URLSearchParams is using `+` instead of `%20`, so replace them.\n    const encodedPath = path.split(\"+\").join(\"%20\");\n\n    return {\n      oidcUrl: `${oidcCore}${encodedPath}`,\n      privateKey: privateKeyInBase64Url,\n    };\n  }\n\n  /**\n   * Generates a new access token out of an authorization code.\n   * @param id - client ID\n   * @param code - Authorization code\n   * @param redirectUri\n   */\n  public async generateAccessToken(\n    id: string,\n    code: string,\n    redirectUri: string\n  ): Promise<object> {\n    const type = \"authorization_code\";\n\n    const token = generateJwt(this.signing);\n\n    const { oidcCore } = hosts(this.config);\n    const path = \"oauth2/token\";\n    const body = {\n      code,\n      grantType: type,\n      redirectUri,\n      clientSecret: token,\n      clientId: id,\n      clientType: \"entity\",\n    };\n\n    const res = await this.apiClient.formPost(`${oidcCore}${path}`, {\n      ...decamelize(body),\n    });\n    // @ts-ignore\n    return res.data;\n  }\n\n  /**\n   * Gets userinfo from OIDC\n   * For data consumer\n   * @param accessToken\n   * @param privateKey - Base64 URL encoded private key.\n   */\n  public async userinfo(\n    accessToken: string,\n    privateKey: string\n  ): Promise<object> {\n    // Call OIDC userinfo API and decrypt the response\n    const authorization = `Bearer ${accessToken}`;\n    const { oidcCore } = hosts(this.config);\n    const path = \"userinfo\";\n    const res = await this.apiClient.get(`${oidcCore}${path}`, {\n      headers: { authorization },\n    });\n\n    const enc = new Encryption();\n    await enc.importPrivateKeyInBase64Url(privateKey);\n    const encryptedClaims = res.data;\n    // @ts-ignore\n    const sid = encryptedClaims.sid;\n    // @ts-ignore\n    const sub = encryptedClaims.sub;\n    // @ts-ignore\n    const signing_public_key = encryptedClaims.signing_public_key;\n    // @ts-ignore\n    const transaction_id = encryptedClaims.transaction_id;\n    // @ts-ignore\n    const ext = encryptedClaims.ext;\n    // @ts-ignore\n    delete encryptedClaims[\"sid\"];\n    // @ts-ignore\n    delete encryptedClaims[\"sub\"];\n    // @ts-ignore\n    delete encryptedClaims[\"signing_public_key\"];\n    // @ts-ignore\n    delete encryptedClaims[\"transaction_id\"];\n    // @ts-ignore\n    delete encryptedClaims[\"ext\"];\n\n    try {\n      const decrypted = await enc.decryptFieldByField(encryptedClaims);\n      const trimmed = trimObject(decrypted);\n      return { ...trimmed, sid, sub, signing_public_key, transaction_id, ext };\n    } catch (e) {\n      throw new Error(\"Decryption failed. Please check your private key.\");\n    }\n  }\n}\n","import { ClaimDefinition } from \"@credify/api-docs/apiClients/types/apiClients/v1\";\nimport type { Claims, Dictionary, Func, OfferCondition } from \"../types\";\n\ninterface IConditionEvaluator {\n  Evaluate(claims: Claims): ConditionEvaluationResult;\n}\n\nexport enum OfferConditionKind {\n  UnknownCondition = \"UNKNOWN_CONDITION\",\n  AndCondition = \"AND_CONDITION\",\n  EqualityCondition = \"EQUALITY_CONDITION\",\n  LargerThanCondition = \"LARGER_THAN_CONDITION\",\n  LargerThanOrEqualCondition = \"LARGER_THAN_OR_EQUAL_CONDITION\",\n  LessThanCondition = \"LESS_THAN_CONDITION\",\n  LessThanOrEqualCondition = \"LESS_THAN_OR_EQUAL_CONDITION\",\n  ContainCondition = \"CONTAIN_CONDITION\",\n  InRangeCondition = \"IN_RANGE_CONDITION\",\n}\n\nexport class ConditionEvaluationResult {\n  public rank: number | undefined;\n\n  public requestedScopes: Array<string> | undefined;\n\n  public usedScopes: Array<string> | undefined;\n\n  public static New(scope?: string): ConditionEvaluationResult {\n    const instance = new ConditionEvaluationResult();\n    instance.rank = 0;\n\n    if (!scope) {\n      instance.requestedScopes = new Array<string>();\n      instance.usedScopes = new Array<string>();\n    } else {\n      instance.requestedScopes = new Array<string>(scope);\n      instance.usedScopes = new Array<string>(scope);\n    }\n    return instance;\n  }\n}\n\nexport class ConditionEvaluator {\n  public static New(condition: OfferCondition): IConditionEvaluator {\n    switch (condition.kind) {\n      case OfferConditionKind.AndCondition:\n        return new AndConditionEvaluator(condition.subconditions!);\n\n      case OfferConditionKind.EqualityCondition:\n        return new EqualityConditionEvaluator(condition);\n\n      case OfferConditionKind.LargerThanCondition:\n        return new LargerThanConditionEvaluator(condition);\n\n      case OfferConditionKind.LargerThanOrEqualCondition:\n        return new LargerThanOrEqualConditionEvaluator(condition);\n\n      case OfferConditionKind.LessThanCondition:\n        return new LessThanConditionEvaluator(condition);\n\n      case OfferConditionKind.LessThanOrEqualCondition:\n        return new LessThanOrEqualConditionEvaluator(condition);\n\n      case OfferConditionKind.ContainCondition:\n        return new ContainConditionEvaluator(condition);\n\n      case OfferConditionKind.InRangeCondition:\n        return new InRangeConditionEvaluator(condition);\n\n      default:\n        return new DefaultConditionEvaluator(condition);\n    }\n  }\n\n  public static ExtractClaimValue(\n    claimDef: ClaimDefinition,\n    claims: Claims\n  ): Object | null {\n    if (!claims.hasOwnProperty(claimDef.scope!.name!)) {\n      return null;\n    }\n\n    let scopeValue = claims[claimDef.scope!.name!];\n    if (scopeValue == null) {\n      return null;\n    }\n\n    let claimDefinitions = new Array<ClaimDefinition>();\n    while (claimDef != null) {\n      claimDefinitions.unshift(claimDef);\n      claimDef = claimDef.main!;\n    }\n\n    let claimValue: Object | null = null;\n    let claimValues = scopeValue;\n    for (let def of claimDefinitions) {\n      if (claimValues == null) {\n        return null;\n      }\n\n      if (!claimValues.hasOwnProperty(def.name!)) {\n        return null;\n      }\n\n      claimValue = claimValues[def.name!];\n      claimValues = <Dictionary<Object>>claimValue;\n    }\n\n    return claimValue;\n  }\n\n  public static EvaluateValue<T>(\n    claimValue: any,\n    evaluator: Func<T[], boolean>,\n    conditionValue: any,\n    conditionValue2?: any\n  ): boolean {\n    return evaluator(...[claimValue, conditionValue, conditionValue2]);\n  }\n}\n\n/* abstract */\nclass ValueConditionEvaluator {\n  public Claim: ClaimDefinition;\n\n  public Value: any;\n\n  public constructor(condition: OfferCondition) {\n    this.Claim = condition.claim!;\n    this.Value = condition.value;\n  }\n\n  protected typesGuard(type: string, itemsNeedToChecks: any[]) {\n    for (let item of itemsNeedToChecks) {\n      const itemType = typeof item;\n      if (itemType !== type) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected EvaluateValue<T>(\n    claims: Claims,\n    evaluator: Func<T[], boolean>\n  ): ConditionEvaluationResult {\n    let result = ConditionEvaluationResult.New(this.Claim.scope!.name!);\n    let claimValue = ConditionEvaluator.ExtractClaimValue(this.Claim, claims);\n    if (claimValue == null) {\n      return result;\n    }\n\n    if (ConditionEvaluator.EvaluateValue(claimValue, evaluator, this.Value)) {\n      result.rank = 1;\n    }\n\n    return result;\n  }\n}\n\nclass EqualityConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    switch (this.Claim.valueType) {\n      case \"BOOLEAN\": {\n        return this.EvaluateValue<boolean>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"boolean\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue === conditionValue;\n          }\n        );\n      }\n      case \"FLOAT\":\n      case \"INTEGER\": {\n        return this.EvaluateValue<number>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"number\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue === conditionValue;\n          }\n        );\n      }\n      case \"TEXT\": {\n        return this.EvaluateValue<string>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"string\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue === conditionValue;\n          }\n        );\n      }\n\n      default:\n        return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    }\n  }\n}\n\nclass LessThanConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    switch (this.Claim.valueType) {\n      case \"FLOAT\":\n      case \"INTEGER\": {\n        return this.EvaluateValue<number>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"number\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue < conditionValue;\n          }\n        );\n      }\n\n      default:\n        return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    }\n  }\n}\n\nclass LessThanOrEqualConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    switch (this.Claim.valueType) {\n      case \"FLOAT\":\n      case \"INTEGER\": {\n        return this.EvaluateValue<number>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"number\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue <= conditionValue;\n          }\n        );\n      }\n\n      default:\n        return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    }\n  }\n}\n\nclass LargerThanConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    switch (this.Claim.valueType) {\n      case \"FLOAT\":\n      case \"INTEGER\": {\n        return this.EvaluateValue<number>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"number\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue > conditionValue;\n          }\n        );\n      }\n\n      default:\n        return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    }\n  }\n}\n\nclass LargerThanOrEqualConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    switch (this.Claim.valueType) {\n      case \"FLOAT\":\n      case \"INTEGER\": {\n        return this.EvaluateValue<number>(\n          claims,\n          (...[claimValue, conditionValue]) => {\n            if (!this.typesGuard(\"number\", [claimValue, conditionValue])) {\n              return false;\n            }\n            return claimValue >= conditionValue;\n          }\n        );\n      }\n\n      default:\n        return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    }\n  }\n}\n\nclass InRangeConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public UpperValue: any;\n\n  public constructor(condition: OfferCondition) {\n    super(condition);\n\n    this.UpperValue = condition.upper;\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    switch (this.Claim.valueType) {\n      case \"FLOAT\":\n      case \"INTEGER\": {\n        return this.EvaluateValue<number>(\n          claims,\n          (...[claimValue, conditionValue, upperValue]) => {\n            if (!this.typesGuard(\"number\", [claimValue, conditionValue])) {\n              return false;\n            }\n\n            return conditionValue <= claimValue && claimValue <= upperValue;\n          }\n        );\n      }\n\n      default:\n        return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    }\n  }\n\n  protected EvaluateValue<T>(\n    claims: Claims,\n    evaluator: Func<T[], boolean>\n  ): ConditionEvaluationResult {\n    let result = ConditionEvaluationResult.New(this.Claim.scope?.name!);\n    let claimValue = ConditionEvaluator.ExtractClaimValue(this.Claim, claims);\n    if (claimValue == null) {\n      return result;\n    }\n\n    if (\n      ConditionEvaluator.EvaluateValue(\n        claimValue,\n        evaluator,\n        this.Value,\n        this.UpperValue\n      )\n    ) {\n      result.rank = 1;\n    }\n\n    return result;\n  }\n}\n\nclass ContainConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    return this.EvaluateValue<string>(\n      claims,\n      (...[claimValue, conditionValue]) => {\n        if (!this.typesGuard(\"string\", [claimValue, conditionValue])) {\n          return false;\n        }\n        return claimValue.includes(conditionValue);\n      }\n    );\n  }\n}\n\nclass DefaultConditionEvaluator\n  extends ValueConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(condition: OfferCondition) {\n    super(condition);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    return ConditionEvaluationResult.New(this.Claim.scope?.name!);\n  }\n}\n\nclass LogicalConditionEvaluator {\n  public Children: Array<IConditionEvaluator>;\n\n  public constructor(subconditions: Array<OfferCondition>) {\n    this.Children =\n      subconditions != null\n        ? subconditions.map((x) => ConditionEvaluator.New(x))\n        : [];\n  }\n}\n\nclass AndConditionEvaluator\n  extends LogicalConditionEvaluator\n  implements IConditionEvaluator\n{\n  public constructor(subconditions: Array<OfferCondition>) {\n    super(subconditions);\n  }\n\n  public Evaluate(claims: Claims): ConditionEvaluationResult {\n    let result = ConditionEvaluationResult.New();\n    if (this.Children.length == 0) {\n      return result;\n    }\n\n    result.rank = 1;\n    for (let child of this.Children) {\n      let childResult = child.Evaluate(claims);\n      result.requestedScopes = [\n        ...result.requestedScopes!,\n        ...childResult.requestedScopes!,\n      ];\n      //  main condition is failed already, stop processing further\n      if (result.rank == 0) {\n        continue;\n      }\n\n      result.usedScopes = [...result.usedScopes!, ...childResult.usedScopes!];\n\n      if (childResult.rank! <= 0) {\n        //  now the child condition failed, main condition is set as failed as well\n        result.rank = 0;\n      }\n    }\n\n    return result;\n  }\n}\n","import { CredifyClass, ProductType } from \"./common\";\nimport {\n  EvaluatedOffersList,\n  EvaluatedOffersListResponse,\n  CommonResponse,\n  CampaignDataWithResult,\n  CampaignsListResponse,\n  OfferDetailResponse,\n  OfferData,\n  EvaluationResult,\n} from \"@credify/api-docs/apiClients/types/apiClients/v1\";\nimport * as ApiIntegration from \"@credify/api-docs/apiClients/types/apiClients/integration-v2\";\nimport {\n  camelize,\n  decamelize,\n  isObjectNullOrEmpty,\n  validateFiatCurrencyObject,\n} from \"./utils\";\nimport { Claims, CompletedBnplProvidersResponse, OfferCondition, Provider } from \"../types\";\nimport { ConditionEvaluationResult, ConditionEvaluator } from \"./evaluator\";\nimport { FiatCurrency, SimulationInput, BaseResponse, } from \"./type\";\n\nconst ONBOARDING_STATUS = {\n  pending: \"PENDING\",\n  completed: \"COMPLETED\",\n  failed: \"FAILED\",\n};\n\nconst OFFER_STATUS = {\n  approved: \"APPROVED\",\n  rejected: \"REJECTED\",\n  inReview: \"IN_REVIEW\",\n};\n\nconst CAMPAIGN_STATUS = {\n  approved: \"APPROVED\",\n  rejected: \"REJECTED\",\n  inReview: \"IN_REVIEW\",\n  archived: \"ARCHIVED\",\n  draft: \"DRAFT\",\n};\n\ninterface GetListPayload {\n  localId: string;\n  phoneNumber?: string;\n  countryCode?: string;\n  credifyId?: string;\n  productTypes?: string[];\n}\nexport class Offer extends CredifyClass {\n  /**\n   * Gets a list of offers after filtering for a specific user.\n   * @param id - ID in your service.\n   * @param options - phoneNumber (e.g. 32123456789 - no 0 at the head), countryCode (e.g. +84 - needs +), credifyId (ID in Credify system).\n   */\n  public async getList(\n    id: string,\n    options?: {\n      phoneNumber?: string;\n      countryCode?: string;\n      credifyId?: string;\n      productTypes?: string[];\n    }\n  ): Promise<EvaluatedOffersList> {\n    try {\n      let payload: GetListPayload = { localId: id };\n\n      if (options?.phoneNumber) {\n        const number = options.phoneNumber.startsWith(\"0\")\n          ? options.phoneNumber.split(\"0\")[1]\n          : options.phoneNumber;\n        payload.phoneNumber = number;\n      }\n      if (options?.countryCode) {\n        const code = options.countryCode.startsWith(\"+\")\n          ? options.countryCode\n          : `+${options.countryCode}`;\n        payload.countryCode = code;\n      }\n      if (options?.credifyId) {\n        payload.credifyId = options.credifyId;\n      }\n      if (options?.productTypes) {\n        payload.productTypes = options.productTypes;\n      }\n\n      const res = await this.apiClient.post<EvaluatedOffersListResponse>(\n        \"/claim-providers/offers\",\n        { ...decamelize(payload) }\n      );\n      if (!res.data.data?.offers) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /**\n   * Updates a status of an offer transaction\n   * @param id - ID of offer approval\n   * @param status - To which status you will update. (PENDING, COMPLETED, FAILED)\n   * @param transactionAmount - Optional. Premium value in the case of insurance without VAT\n   * @param referenceId - Optional. Reference ID generated inside the service provider\n   * @param vat - Optional. value associated with this transaction\n   * @returns Promise<boolean>\n   */\n  public async updateStatus(\n    id: string,\n    status: string,\n    transactionAmount?: FiatCurrency | null,\n    referenceId?: string | null,\n    vat?: FiatCurrency | null\n  ): Promise<boolean> {\n    if (!id) {\n      throw new Error(\"ID should not be blank\");\n    }\n    const acceptableStatuses = Object.values(ONBOARDING_STATUS);\n    if (!acceptableStatuses.includes(status)) {\n      throw new Error(\n        `The status needs to be one of ${acceptableStatuses.join(\", \")}`\n      );\n    }\n\n    try {\n      const body = {\n        onboardingStatus: status,\n        transactionAmount: validateFiatCurrencyObject(transactionAmount),\n        referenceId,\n        vat: validateFiatCurrencyObject(vat),\n      };\n      const res = await this.apiClient.put<CommonResponse>(\n        `/oidc-clients/offers/transactions/${id}/status`,\n        decamelize(body)\n      );\n      return res.data.success === true;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Gets a list of campaigns you have created.\n   * @param offerStatus - Status of offers (APPROVED, REJECTED, IN_REVIEW)\n   * @param campaignStatus - Status of campaigns (APPROVED, REJECTED, IN_REVIEW, ARCHIVED, DRAFT)\n   * @returns array of campaign object\n   */\n  public async getCampaigns({\n    offerStatus,\n    campaignStatus,\n  }: { offerStatus?: string; campaignStatus?: string } = {}): Promise<\n    CampaignDataWithResult[]\n  > {\n    offerStatus = offerStatus || OFFER_STATUS.approved;\n    campaignStatus = campaignStatus || CAMPAIGN_STATUS.approved;\n    const acceptableOfferStatuses = Object.values(OFFER_STATUS);\n    if (!acceptableOfferStatuses.includes(offerStatus)) {\n      throw new Error(\n        `The status needs to be one of ${acceptableOfferStatuses.join(\", \")}`\n      );\n    }\n    const acceptableCampaignStatuses = Object.values(CAMPAIGN_STATUS);\n    if (!acceptableCampaignStatuses.includes(campaignStatus)) {\n      throw new Error(\n        `The status needs to be one of ${acceptableCampaignStatuses.join(\", \")}`\n      );\n    }\n\n    try {\n      // Set page 1, limit 100, as the number of the campaigns is much lower than this.\n      const query = `page=1&limit=100&campaign_status=${campaignStatus}&offer_status=${offerStatus}`;\n      const res = await this.apiClient.get<CampaignsListResponse>(\n        `/oidc-clients/campaigns?${query}`\n      );\n\n      if (!res.data?.data?.campaigns) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data.campaigns;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets a detail of a specified offer\n   * @param offerCode\n   * @returns Offer detail info\n   */\n  public async getOfferDetail(\n    offerCode: string\n  ): Promise<OfferData> {\n    if (!offerCode) {\n      throw new Error(\"Offer code should not be blank\");\n    }\n\n    try {\n      const res = await this.apiClient.get<OfferDetailResponse>(\n        `/oidc-clients/offers/${offerCode}`\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      // @ts-ignore\n      return res.data.data.offer;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Evaluate offer conditions based on scope definitions and user's claims.\n   * @param conditions Offer conditions to evaluate\n   * @param requiredCustomScopes Required custom scopes for each levels\n   * @param userClaims Value of user claims to evaluate against\n   * @returns evaluation result\n   */\n  public evaluateOffer(\n    conditions: OfferCondition[] | any[] | null,\n    requiredCustomScopes: string[][] | any[] | null,\n    userClaims: Claims | null\n  ): EvaluationResult {\n    if (\n      conditions == null ||\n      requiredCustomScopes == null ||\n      userClaims == null\n    ) {\n      return {\n        rank: 0,\n      };\n    }\n\n    let maxLevel = Math.max(conditions.length, requiredCustomScopes.length);\n    if (maxLevel === 0) {\n      return {\n        rank: 0,\n      };\n    }\n\n    let finalRank: number | null = null;\n    let result = ConditionEvaluationResult.New();\n    for (let i: number = 0; i < maxLevel; i++) {\n      let conditionResult = ConditionEvaluationResult.New();\n      conditionResult.rank = 1;\n      if (i < conditions.length) {\n        let condition = conditions[i];\n        if (!isObjectNullOrEmpty(condition)) {\n          if (typeof condition === \"object\") {\n            condition = camelize(condition);\n          }\n          let evaluator = ConditionEvaluator.New(condition);\n          conditionResult = evaluator.Evaluate(userClaims);\n        }\n      }\n\n      let scopeResult = ConditionEvaluationResult.New();\n      scopeResult.rank = 1;\n      if (i < requiredCustomScopes.length) {\n        let currentRequiredScopes = requiredCustomScopes[i];\n        if (currentRequiredScopes != null) {\n          scopeResult.requestedScopes = currentRequiredScopes;\n          scopeResult.usedScopes = currentRequiredScopes;\n          for (let requiredScope of currentRequiredScopes) {\n            if (!userClaims.hasOwnProperty(requiredScope)) {\n              scopeResult.rank = 0;\n            }\n          }\n        }\n      }\n\n      result.requestedScopes = [\n        ...result.requestedScopes!,\n        ...conditionResult.requestedScopes!,\n        ...scopeResult.requestedScopes!,\n      ];\n\n      if (finalRank != null) {\n        //  failed at previous level, just continue\n        continue;\n      }\n\n      if (conditionResult.rank! > 0 && scopeResult.rank! > 0) {\n        //  level passed, add used scopes\n        result.usedScopes = [\n          ...result.usedScopes!,\n          ...conditionResult.usedScopes!,\n          ...scopeResult.usedScopes!,\n        ];\n      } else {\n        //  set max rank as current level is failed now\n        finalRank = i;\n      }\n    }\n    //  if all passed, rank should be max level\n    if (finalRank == null) {\n      finalRank = maxLevel;\n    }\n\n    return {\n      /** This user's level. Its min is 0, while its max is the number of `levels`. */\n      rank: finalRank,\n      requestedScopes: [...new Set(result.requestedScopes!)],\n      usedScopes: [...new Set(result.usedScopes!)],\n    };\n  }\n\n  /**\n   * Get completed bnpl providers\n   * @param credifyId credify id\n   * @returns Get CompletedBnplProvidersResponse\n   */\n  async getCompletedBnplProviders(\n    credifyId: string\n  ): Promise<CompletedBnplProvidersResponse> {\n    try {\n      const res =\n        await this.apiClient.get<ApiIntegration.GetCompletedBnplProviderList200Response>(\n          `/integration/bnpl-consumers/completed-bnpl-providers?credify_id=${credifyId}`\n        );\n\n      const data = res.data as CompletedBnplProvidersResponse;\n      return decamelize(data);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /**\n   * Get bnpl info\n   * @param id - ID in your service.\n   * @param options - phoneNumber (e.g. 32123456789 - no 0 at the head), countryCode (e.g. +84 - needs +), credifyId (ID in Credify system), phoneTypes (e.g. [\"consumer-financing:unsecured-loan:bnpl\"]).\n   */\n  public async getBNPLInfo(\n    id: string,\n    options?: {\n      phoneNumber?: string;\n      countryCode?: string;\n      credifyId?: string;\n      productTypes?: string[];\n    }\n  ): Promise<any> {\n    try {\n      const data = await this.getList(id?.toString(), options);\n      let completedProviders = [] as Provider[];\n      if (options?.credifyId) {\n        const { data } = await this.getCompletedBnplProviders(\n          options?.credifyId\n        );\n        if (data?.providers?.length) {\n          completedProviders = data.providers;\n        }\n      }\n      const isAvailable: boolean = !!(\n        data?.offers?.length || completedProviders.length\n      );\n      const result = {\n        isAvailable,\n        offers: data?.offers || [],\n        providers: completedProviders,\n      }\n\n      return result;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /**\n   * get simulation\n   * @param productType - type of product\n   * @param providerIds - list provider to filter\n   * @param inputs - extra data\n   * @returns object\n   */\n  public async simulate(\n    productType: ProductType,\n    providerIds: string[],\n    inputs: SimulationInput,\n  ): Promise<any> {\n    const payload = {\n      providerIds,\n      inputs,\n    };\n\n    try {\n      const res = await this.apiClient.post<BaseResponse>(\n        `/claim-providers/products/${productType}/simulation`,\n        decamelize(payload)\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n}\n","import {parseJwt, Signing, verifyJwt, sha256} from \"@credify/crypto\";\nimport { PublicKeyResponse } from \"@credify/api-docs/apiClients/types/apiClients/v1\";\nimport { CredifyClass } from \"./common\";\nimport {ecosystemId } from \"./config\";\n\nexport class Auth extends CredifyClass {\n  /**\n   * Introspects access token\n   * @param token\n   * @param scope\n   */\n  public async introspectToken(token: string, scope: string): Promise<boolean> {\n    const body = {\n      token,\n      scope,\n    };\n    const res = await this.apiClient.post(\"/oauth2/introspect\", body);\n    const resBody = res.data;\n    // @ts-ignore\n    return resBody.data?.active === true;\n  }\n\n  /**\n   * Introspects an access token with the result returning\n   * @param token\n   * @returns Promise<any> Any here should be a json object with the schema like { data: { active: true, client_id: '', scope: '', ... } }\n   */\n  public async introspectTokenReturnResult(token: string): Promise<any> {\n    const body = {\n      token,\n    };\n    const res = await this.apiClient.post(\"/oauth2/introspect\", body);\n    return res.data;\n  }\n\n  /**\n   * Verifies webhook that is sent by Credify.\n   * This function checks if the signature is actually signed by Credify.\n   * @param signature You can get it from webhook HTTP request header\n   * @param body Webhook HTTP request body\n   * @param endpoint You can get it from webhook HTTP request header\n   * @param eventId You can get it from webhook HTTP request header\n   * @param timestamp You can get it from webhook HTTP request header\n   * @returns Promise<boolean> Whether this request is valid or not.\n   */\n  public async verifyWebhook(signature: string, body: object, endpoint: string, eventId: string, timestamp: string): Promise<boolean> {\n    const id = ecosystemId(this.config);\n    const ecosystemKey = await this.apiClient.get<\n      PublicKeyResponse\n      >(`/entity/public-key?entity_id=${id}`);\n    const pub = ecosystemKey.data.data?.signing || \"\";\n    if (pub === \"\") {\n      throw new Error(\"Public key is not found.\");\n    }\n\n    const s = new Signing();\n    s.importPublicKey(pub);\n\n    const method = \"POST\";\n    const payload = sha256(body);\n    const message = `${method}\\n${endpoint}\\n${eventId}\\n${timestamp}\\n${payload}`;\n\n    const valid = s.verify(message, signature, { encode: \"base64Url\" });\n    if (!valid) {\n      throw new Error(\"Signature of webhook request is not valid.\");\n    }\n\n    return true;\n  }\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { CredifyClass } from \"./common\";\nimport {\n  BaseResponse,\n  Duration,\n  FiatCurrency,\n  GetOrderResponse,\n  GetOrdersResponse,\n  OrderInfo,\n  OrderLine,\n  PaymentRecipient,\n} from \"./type\";\nimport {\n  camelize,\n  decamelize,\n  validateDurationObject,\n  validateFiatCurrencyObject,\n} from \"./utils\";\nimport { validate as isValidUUID } from \"uuid\";\n\nexport class Bnpl extends CredifyClass {\n  /**\n   * Create a Bnpl order\n   * @param referenceId - Id of the order\n   * @param totalAmount - Total amount of the order\n   * @param orderLines - Order's orderlines\n   * @param paymentRecipient - The bank account's information of the payment recipient\n   * @returns order object\n   */\n  public async createOrder(\n    referenceId: string,\n    totalAmount: FiatCurrency,\n    orderLines: OrderLine[],\n    paymentRecipient: PaymentRecipient\n  ): Promise<OrderInfo> {\n    orderLines = camelize(orderLines);\n    for (const o of orderLines) {\n      if (o.unitPrice) {\n        o.unitPrice = validateFiatCurrencyObject(o.unitPrice);\n      }\n      if (o.subtotal) {\n        o.subtotal = validateFiatCurrencyObject(o.subtotal);\n      }\n    }\n\n    const payload = {\n      referenceId,\n      totalAmount: validateFiatCurrencyObject(totalAmount),\n      orderLines,\n      paymentRecipient,\n    };\n\n    try {\n      const res = await this.apiClient.post<GetOrderResponse>(\n        `/integration/bnpl-consumers/orders`,\n        decamelize(payload)\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Bnpl orders\n   * @param credifyId - CredifyId of the user\n   * @returns List of orders associated with the CredifyId\n   */\n  public async getOrders(credifyId: string): Promise<OrderInfo[]> {\n    if (!credifyId) {\n      throw new Error(\"The CredifyId must be provided\");\n    }\n\n    if (!isValidUUID(credifyId)) {\n      throw new Error(\"The CredifyId must be in an UUID format\");\n    }\n\n    try {\n      const res = await this.apiClient.get<GetOrdersResponse>(\n        `/integration/bnpl-consumers/orders?credify_id=${credifyId}`\n      );\n\n      if (!res.data?.data?.orders) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data.orders;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets order's information\n   * @param orderId - Id of the Order\n   * @returns order object\n   */\n  public async getOrder(orderId: string): Promise<OrderInfo> {\n    try {\n      const res = await this.apiClient.get<GetOrderResponse>(\n        `/integration/bnpl-providers/orders/${orderId}`\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Complete the bnpl order\n   * @param orderId - Id of the Order\n   * @param creditLimit - Credit limit of the payment plan\n   * @param apr - Annual percentage rate\n   * @param repaymentDuration - Duration of the repayment\n   * @param repaymentInterval - Interval of the repayment\n   * @param overduePenaltyRate - Penalty rate in case of overdue\n   * @param bnplAccountNumber - Account number created for the payer\n   * @param payerId - ExternalId of payer\n   */\n  public async completeOrder(\n    orderId: string,\n    creditLimit: FiatCurrency,\n    apr: number,\n    repaymentDuration: Duration,\n    repaymentInterval: Duration,\n    overduePenaltyRate: number,\n    bnplAccountNumber: string,\n    payerId: string\n  ): Promise<any> {\n    const payload = {\n      creditLimit: validateFiatCurrencyObject(creditLimit),\n      apr,\n      repaymentDuration: validateDurationObject(repaymentDuration),\n      repaymentInterval: validateDurationObject(repaymentInterval),\n      overduePenaltyRate,\n      bnplAccountNumber,\n      payerId,\n    };\n    try {\n      const res = await this.apiClient.post<BaseResponse>(\n        `/integration/bnpl-providers/orders/${orderId}/complete`,\n        decamelize(payload)\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Revert the BNPL payment\n   * @param orderId - Id of the Order\n   */\n  public async revertPayment(orderId: string): Promise<any> {\n    try {\n      const res = await this.apiClient.post<BaseResponse>(\n        `/integration/bnpl-consumers/orders/${orderId}/revert`,\n        {}\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Disbursement\n   * @param orderId - Id of the Order\n   */\n  public async disbursement(orderId: string): Promise<any> {\n    try {\n      const res = await this.apiClient.post<BaseResponse>(\n        `/integration/bnpl-consumers/orders/${orderId}/disburse`,\n        {}\n      );\n\n      if (!res.data?.data) {\n        throw new Error(\"Unexpected object\");\n      }\n      return res.data.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n}\n","import { AxiosError } from \"axios\";\n\nexport class CredifyError extends Error {\n  status: number = 0;\n  method: string = \"\";\n  url: string = \"\";\n  traceId: string = \"\";\n  constructor(apiError: AxiosError) {\n    super();\n    const prefix = \"credify_server_error\";\n    if (apiError.response && apiError.response.data) {\n      // console.log(apiError.response.data);\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      const errors = apiError.response.data[\"errors\"] || [];\n      if (errors.length === 0) {\n        this.name = `${prefix}:${apiError.response.status}`;\n        this.message = apiError.response.statusText || \"unknown\";\n      } else {\n        const e = errors[0];\n        this.name = `${prefix}:${e.code}`;\n        this.message = e.localized_message?.text || e.message;\n      }\n      this.status = apiError.response.status;\n      this.traceId = apiError.response.headers?.tracer || \"\";\n      this.method = apiError.response.config.method || \"\";\n      this.url = apiError.response.config.url || \"\";\n      // console.log(apiError.response.headers);\n    } else if (apiError.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      this.name = `${prefix}:request_error`;\n      this.message =\n        \"The request has failed. Server is not reachable or you are not connected with network.\";\n      this.status = 0;\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      console.log(\"Error\", apiError.message);\n      this.name = `${prefix}:unknown_error`;\n      this.message =\n        \"The request has failed. Server is not reachable or you are not connected with network.\";\n      this.status = 0;\n    }\n  }\n}\n\nexport class OIDCError extends Error {\n  private status: number = 0;\n  constructor(apiError: AxiosError) {\n    super();\n    const prefix = \"oidc_server_error\";\n    if (apiError.response && apiError.response.data) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      const name = apiError.response.data[\"error\"] || \"unknown\";\n      this.name = `${prefix}:${name}`;\n      this.message = apiError.response.data[\"error_description\"] || \"unknown\";\n      this.status = apiError.response.status;\n      const oidcErrorHint = apiError.response.data[\"error_hint\"] || \"unknown\";\n      console.error({ oidcErrorHint });\n      // console.log(apiError.response.headers);\n    } else if (apiError.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      console.log(apiError.request);\n      this.name = `${prefix}:request_error`;\n      this.message =\n        \"The request has failed. Server is not reachable or you are not connected with network.\";\n      this.status = 0;\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      console.log(\"Error\", apiError.message);\n      this.name = `${prefix}:unknown_error`;\n      this.message =\n        \"The request has failed. Server is not reachable or you are not connected with network.\";\n      this.status = 0;\n    }\n  }\n}\n","// @ts-ignore\nimport axios, {\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosError,\n} from \"axios\";\nimport { hosts } from \"./config\";\nimport { CredifyConfig } from \"../types\";\nimport { camelize } from \"./utils\";\nimport { CredifyError, OIDCError } from \"./errors\";\nimport packageJson from \"../package.json\";\n\nclass ApiClient {\n  protected readonly instance: AxiosInstance;\n  constructor(apiKey: string, accessToken: string, config: CredifyConfig) {\n    const { api } = hosts(config);\n    const reqObject = {\n      baseURL: `${api}v1/`,\n      timeout: 8000,\n      headers: {\n        \"Accept-Language\": config.locale || \"en-US\",\n      },\n    };\n    if (apiKey) {\n      // @ts-ignore\n      reqObject.headers[\"X-API-KEY\"] = apiKey;\n    }\n    if (accessToken) {\n      // @ts-ignore\n      reqObject.headers[\"Authorization\"] = accessToken;\n    }\n    // @ts-ignore\n    reqObject.headers[\"User-Agent\"] = \"servicex/nodejs/\" + packageJson.version;\n\n    const instance = axios.create(reqObject);\n    // *** Somehow the request interceptor block the response interceptor and we don't have a use case for using\n    // the request interceptor yet so I temporary disable it first and comeback to this issue later when we have use case for it\n    // instance.interceptors.request.use((request) => {\n    //   return request;\n    // });\n    instance.interceptors.response.use((response) => {\n      if (\n        response.data &&\n        response.headers &&\n        response.headers[\"content-type\"] === \"application/json\"\n      ) {\n        const url = response.config.url || \"\";\n        // UserInfo response should not be using camelize.\n        if (url.includes(\"userinfo\")) return response;\n\n        response.data = camelize(response.data);\n      }\n      return response;\n    });\n    this.instance = instance;\n  }\n\n  async get<T>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<AxiosResponse<T>> {\n    return this.instance.get<T>(url, config).catch((e: AxiosError) => {\n      throw this.generateError(url, e);\n    });\n  }\n\n  async post<T>(\n    url: string,\n    body: object,\n    config?: AxiosRequestConfig\n  ): Promise<AxiosResponse<T>> {\n    return this.instance.post<T>(url, body, config).catch((e: AxiosError) => {\n      throw this.generateError(url, e);\n    });\n  }\n\n  async formPost<T>(\n    url: string,\n    params: object,\n    config?: AxiosRequestConfig\n  ): Promise<AxiosResponse<T>> {\n    const p = new URLSearchParams();\n    Object.keys(params).forEach((key) => {\n      // @ts-ignore\n      p.append(key, params[key]);\n    });\n    const c = {\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n    return this.instance.post<T>(url, p, c).catch((e: AxiosError) => {\n      throw this.generateError(url, e);\n    });\n  }\n\n  async put<T>(\n    url: string,\n    body: object,\n    config?: AxiosRequestConfig\n  ): Promise<AxiosResponse<T>> {\n    return this.instance.put<T>(url, body, config).catch((e: AxiosError) => {\n      throw this.generateError(url, e);\n    });\n  }\n\n  async delete<T>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<AxiosResponse<T>> {\n    return this.instance.delete<T>(url, config).catch((e: AxiosError) => {\n      throw this.generateError(url, e);\n    });\n  }\n\n  generateError(url: string, error: AxiosError): Error {\n    if (url.includes(\"oidc-core.credify\")) {\n      return new OIDCError(error);\n    } else {\n      return new CredifyError(error);\n    }\n  }\n}\n\nexport default ApiClient;\n","import {\n  Signing,\n  sha256,\n  generateCommitment,\n  generateJwt,\n  parseJwt,\n} from \"@credify/crypto\";\n\nimport { Entity } from \"./entity\";\nimport { Claims } from \"./claims\";\nimport { OIDC } from \"./oidc\";\nimport { Offer } from \"./offer\";\nimport { Auth } from \"./auth\";\nimport { Bnpl } from \"./bnpl\";\nimport ApiClient from \"./apiClient\";\nimport type { CredifyConfig } from \"../types\";\nimport { CredifyInstance } from \"./type\";\n\nclass Credify {\n  private static _instance: CredifyInstance = {};\n  entity: Entity;\n  claims: Claims;\n  oidc: OIDC;\n  offer: Offer;\n  auth: Auth;\n  bnpl: Bnpl;\n  accessToken: string;\n\n  /**\n   * Instantiates Credify object\n   * @param secret Signing private key (raw PKCS#8 string value).\n   * @param accessToken\n   * @param config\n   * */\n  constructor(secret: string, accessToken: string, config: CredifyConfig) {\n    const signing = new Signing();\n    signing.importPrivateKey(secret);\n    const apiClient = new ApiClient(\"\", accessToken, config);\n    this.entity = new Entity(config, apiClient, signing);\n    this.claims = new Claims(config, apiClient, signing);\n    this.oidc = new OIDC(config, apiClient, signing);\n    this.offer = new Offer(config, apiClient, signing);\n    this.auth = new Auth(config, apiClient, signing);\n    this.bnpl = new Bnpl(config, apiClient, signing);\n    this.accessToken = accessToken.replace(\"Bearer \", \"\");\n  }\n\n  // Check token's expire time\n  private static checkTokenExpired(accessToken: string): boolean {\n    const tokenInfo = parseJwt(accessToken);\n    const exp = tokenInfo?.payload?.exp;\n    const current = Math.floor(new Date().getTime() / 1000); // to seconds\n    // Compare with 60 seconds before current\n    return exp - 60 < current;\n  }\n\n  static async create(secret: string, apiKey: string, config: CredifyConfig) {\n    if (\n      this._instance.hasOwnProperty(apiKey) &&\n      !this.checkTokenExpired(this._instance[apiKey].accessToken)\n    ) {\n      return this._instance[apiKey];\n    }\n\n    const defaultConfig: CredifyConfig = { mode: \"sandbox\", locale: \"en-US\" };\n    const cnf = config || defaultConfig;\n    const tmpApiClient = new ApiClient(apiKey, \"\", cnf);\n    const res = await tmpApiClient.post<any>(`/token`, {});\n    const accessToken = res?.data?.data?.accessToken || \"\";\n    this._instance[apiKey] = new Credify(secret, `Bearer ${accessToken}`, cnf);\n    return this._instance[apiKey];\n  }\n}\n\nexport { Credify, sha256, generateJwt, parseJwt, generateCommitment };\n"],"names":["Encryption","Signing","decamelize","generateCommitment","generateClaimToken","parseJwt","camelize","verifyJwt","generateDisbursementToken","generateJwt","sha256","isValidUUID","axios"],"mappings":"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"}